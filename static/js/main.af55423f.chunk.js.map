{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","id","postsId","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QChBIG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SAEGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,WCNJS,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBR,EAAgBQ,EAAhBR,MAAOD,EAASS,EAATT,KAEf,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCHMU,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOV,EAAyBS,EAAzBT,KAAMO,EAAmBE,EAAnBF,KAAMH,EAAaK,EAAbL,SAE3B,OACE,mCACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCS,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGN,UAAU,iBAAb,SACGD,IAGkB,IAApBI,EAASO,OACN,mBAAG,UAAQ,oBAAX,6BACA,cAAC,EAAD,CAAaP,SAAUA,WCxBtBQ,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKZ,UAAU,WAAf,SACGY,EAAMR,KAAI,SAAAI,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,UCaP,IAAMI,EAAQC,EAAgBT,KAAI,SAAAI,GAAI,kCACxCA,GADwC,IAE3CF,MAXmBQ,EAWDN,EAAKM,OAVhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKW,KAAOH,MACzC,MAUPX,UAP0Be,EAOGV,EAAKS,GAN3BE,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQyB,SAAWH,QADjE,IAA4BA,EALPJ,KAeRQ,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CACEY,MAAOA,QC1BbW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.af55423f.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n\n    {comments.map(comment => (\n      <CommentInfo\n        comment={comment}\n      />\n    ))}\n\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const { title, body, user, comments } = post;\n\n  return (\n    <>\n      <div className=\"PostInfo\">\n        <div className=\"PostInfo__header\">\n          <h3 className=\"PostInfo__title\">{title}</h3>\n\n          <p>\n            {' Posted by  '}\n\n            <UserInfo user={user} />\n          </p>\n        </div>\n\n        <p className=\"PostInfo__body\">\n          {body}\n        </p>\n\n        {comments.length === 0\n          ? <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n          : <CommentList comments={comments} />\n        }\n\n      </div>\n    </>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        post={post}\n      />\n    ))}\n\n  </div>\n);\n","import './App.scss';\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\n// import postsFromServer from './api/posts.json';\n// import commentsFromServer from './api/comments.json';\n// import usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentsForUser(postsId) {\n  return commentsFromServer.filter(comment => comment.postId === postsId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsForUser(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList\n      posts={posts}\n    />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}